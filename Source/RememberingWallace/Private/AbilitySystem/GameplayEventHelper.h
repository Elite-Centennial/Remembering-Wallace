// Elite Centennial

#pragma once

#include "GameplayTagContainer.h"

class UAbilitySystemComponent;
struct FGameplayEffectModCallbackData;
struct FGameplayEventData;

namespace RememberingWallace::GameplayEvent
{
	/**
	 * Gather data from the incoming data and send gameplay events to the instigator (ultimate source of the gameplay
	 * effect) and the target
	 *
	 * This is meant to be called in PostGameplayEffectExecute method of attribute sets. To receive the event data
	 * generated by this method, pass in a valid pointer to an event data struct.
	 */
	void SendEventsForAttrGEExecute(
		const FGameplayEffectModCallbackData* Data,
		UAbilitySystemComponent* TargetASC,
		const FGameplayTag& TagForSource,
		const FGameplayTag& TagForTarget,
		const float Magnitude,
		FGameplayEventData* OutEventData = nullptr);

	/**
	 * Gather gameplay event data from the incoming data
	 *
	 * This is meant to be called in PostGameplayEffectExecute method of attribute sets. To receive the fetched
	 * instigator ASC, pass in a valid pointer to a variable of pointer to ASC (yikes).
	 */
	void GatherEventDataForAttrGEExecute(
		const FGameplayEffectModCallbackData* Data,
		const float Magnitude,
		FGameplayEventData* OutEventData,
		UAbilitySystemComponent** OutInstigatorASC = nullptr);
}
